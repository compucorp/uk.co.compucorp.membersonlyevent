-- +--------------------------------------------------------------------+
-- | Copyright CiviCRM LLC. All rights reserved.                        |
-- |                                                                    |
-- | This work is published under the GNU AGPLv3 license with some      |
-- | permitted exceptions and without any warranty. For full license    |
-- | and copyright information, see https://civicrm.org/licensing       |
-- +--------------------------------------------------------------------+
--
-- Generated from schema.tpl
-- DO NOT EDIT.  Generated by CRM_Core_CodeGen
--
-- /*******************************************************
-- *
-- * Clean up the existing tables - this section generated from drop.tpl
-- *
-- *******************************************************/

SET FOREIGN_KEY_CHECKS=0;

DROP TABLE IF EXISTS `membersonlyevent`;
DROP TABLE IF EXISTS `membersonlyevent_event_membership_type`;
DROP TABLE IF EXISTS `membersonlyevent_event_group`;

SET FOREIGN_KEY_CHECKS=1;
-- /*******************************************************
-- *
-- * membersonlyevent
-- *
-- * Stores members-only event configurations
-- *
-- *******************************************************/
CREATE TABLE `membersonlyevent` (
  `id` int unsigned NOT NULL AUTO_INCREMENT,
  `event_id` int unsigned NOT NULL COMMENT 'Foreign key for the Event',
  `is_showing_custom_access_denied_message` tinyint DEFAULT 0 COMMENT 'This allows you to add a custom access denied message for members-only event.',
  `notice_for_access_denied` text DEFAULT NULL COMMENT 'Notice message to show to the user when the access to members-only event denied.',
  `is_showing_login_block` tinyint DEFAULT 0 COMMENT 'This allows you to choose a Login block to display and add a custom message to be displayed on the block for anonymous users',
  `block_type` int unsigned DEFAULT 1 COMMENT 'Login block type',
  `login_block_message` text DEFAULT NULL COMMENT 'Login block message to show to the user when access to members-only event denied.',
  `is_showing_purchase_membership_block` tinyint DEFAULT 0 COMMENT 'This allows you to add a label, custom message and  link to be displayed on the event.',
  `purchase_membership_button_label` varchar(255) DEFAULT NULL COMMENT 'Purchase membership button label if it is enabled',
  `purchase_membership_body_text` text DEFAULT NULL COMMENT 'Custom message to show to the user when access to members-only event denied.',
  `purchase_membership_link_type` int DEFAULT 0 COMMENT '0: contribution page, 1: custom URL',
  `contribution_page_id` int unsigned DEFAULT NULL COMMENT 'Foreign key for the Contribution page',
  `purchase_membership_url` varchar(3000) DEFAULT NULL COMMENT 'Purchase membership page URL',
  `event_access_type` int unsigned DEFAULT 1 COMMENT 'Should we check event access based on user authentication, group or membership type?',
  PRIMARY KEY (`id`),
  CONSTRAINT FK_membersonlyevent_event_id FOREIGN KEY (`event_id`) REFERENCES `civicrm_event`(`id`) ON DELETE CASCADE,
  CONSTRAINT FK_membersonlyevent_contribution_page_id FOREIGN KEY (`contribution_page_id`) REFERENCES `civicrm_contribution_page`(`id`) ON DELETE SET NULL
)
ENGINE=InnoDB;

-- /*******************************************************
-- *
-- * Create new tables
-- *
-- *******************************************************/

-- /*******************************************************
-- *
-- * membersonlyevent_event_group
-- *
-- * Joining table for members-only event and allowed groups
-- *
-- *******************************************************/
CREATE TABLE `membersonlyevent_event_group` (
  `id` int unsigned NOT NULL AUTO_INCREMENT COMMENT 'Unique EventGroup ID',
  `members_only_event_id` int unsigned NOT NULL COMMENT 'Members-only event ID.',
  `group_id` int unsigned NOT NULL COMMENT 'Allowed Group ID.',
  PRIMARY KEY (`id`),
  INDEX `index_event_id_group_id`(members_only_event_id, group_id),
  CONSTRAINT FK_membersonlyevent_event_group_members_only_event_id FOREIGN KEY (`members_only_event_id`) REFERENCES `membersonlyevent`(`id`) ON DELETE CASCADE,
  CONSTRAINT FK_membersonlyevent_event_group_group_id FOREIGN KEY (`group_id`) REFERENCES `civicrm_group`(`id`) ON DELETE CASCADE
)
ENGINE=InnoDB;

-- /*******************************************************
-- *
-- * membersonlyevent_event_membership_type
-- *
-- * Joining table for members-only event and allowed membership types
-- *
-- *******************************************************/
CREATE TABLE `membersonlyevent_event_membership_type` (
  `members_only_event_id` int unsigned NOT NULL COMMENT 'Members-only event ID.',
  `membership_type_id` int unsigned NOT NULL COMMENT 'Allowed Membership Type ID.',
  INDEX `index_event_id_membership_type_id`(members_only_event_id, membership_type_id),
  CONSTRAINT FK_membersonlyevent_event_membership_type_members_only_event_id FOREIGN KEY (`members_only_event_id`) REFERENCES `membersonlyevent`(`id`) ON DELETE CASCADE,
  CONSTRAINT FK_membersonlyevent_event_membership_type_membership_type_id FOREIGN KEY (`membership_type_id`) REFERENCES `civicrm_membership_type`(`id`) ON DELETE CASCADE
)
ENGINE=InnoDB;
